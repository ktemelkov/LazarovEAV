<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:util="clr-namespace:LazarovEAV.UI.Util" 
                    xmlns:sys="clr-namespace:System;assembly=mscorlib"
                    xmlns:ui="clr-namespace:LazarovEAV.UI"
                    >

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="..\Resources\styles.xaml"/>
        <ResourceDictionary>
            <sys:Double x:Key="HotOpacity">0.05</sys:Double>
            <sys:Double x:Key="CheckedOpacity">0.1</sys:Double>
            <sys:Double x:Key="DisabledOpacity">0.07</sys:Double>
        </ResourceDictionary>
    </ResourceDictionary.MergedDictionaries>

    <ui:SizeConverter x:Key="SizeConverter"/>

    <Style x:Key="{x:Type Button}" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Background" Value="{StaticResource WidgetBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WidgetForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="ContentBorder"  
                               CornerRadius="3" 
                               BorderThickness="{TemplateBinding BorderThickness}"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}">
                        </Border>
                        <Border x:Name="Overlay"  
                               CornerRadius="0" 
                               BorderThickness="0"
                               Opacity="0.0"
                               Background="Black"
                               BorderBrush="{x:Null}"/>
                        <Border x:Name="Overlay2"  
                               CornerRadius="0" 
                               BorderThickness="0"
                               Opacity="0.0"
                               Background="White"
                               BorderBrush="{x:Null}"/>

                        <ContentPresenter Margin="10,2,10,2"
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                          
                                 RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay2" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="SysMenuButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="FontSize" Value="17"/>
        <Setter Property="Background" Value="{StaticResource WidgetBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource WidgetForegroundBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="ContentBorder"  
                               CornerRadius="0" 
                               BorderThickness="{TemplateBinding BorderThickness}"
                               Background="{TemplateBinding Background}"
                               BorderBrush="{TemplateBinding BorderBrush}">
                        </Border>
                        <Border x:Name="Overlay"  
                               CornerRadius="0" 
                               BorderThickness="0"
                               Opacity="0.0"
                               Background="Black"
                               BorderBrush="{x:Null}">
                        </Border>
                        <ContentPresenter
                                 HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                 VerticalAlignment="{TemplateBinding VerticalContentAlignment}"                                          
                                 RecognizesAccessKey="True"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="RoundIconButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0,4,0,0"/>
        <Setter Property="util:RoundButtonProperties.IconSize" Value="30.0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.Row="0" x:Name="Overlay" Fill="Black" StrokeThickness="0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0" Opacity="0.0"/>
                        <Ellipse Grid.Row="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0"/>

                        <ContentControl Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" Width="{TemplateBinding util:RoundButtonProperties.IconSize}" Height="{TemplateBinding util:RoundButtonProperties.IconSize}" Foreground="{TemplateBinding Foreground}" 
                                       Content="{TemplateBinding util:RoundButtonProperties.Icon}"/>

                        <Grid Grid.Row="1" Margin="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RoundIconCheckbox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0,4,0,0"/>
        <Setter Property="util:RoundButtonProperties.IconSize" Value="30.0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.Row="0" x:Name="Overlay" Fill="Black" StrokeThickness="0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0" Opacity="0.0"/>
                        <Ellipse Grid.Row="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0"/>

                        <ContentControl Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" Width="{TemplateBinding util:RoundButtonProperties.IconSize}" Height="{TemplateBinding util:RoundButtonProperties.IconSize}" Foreground="{TemplateBinding Foreground}" 
                                       Content="{TemplateBinding util:RoundButtonProperties.Icon}"/>

                        <Grid Grid.Row="1" Margin="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RoundIconRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0,4,0,0"/>
        <Setter Property="util:RoundButtonProperties.IconSize" Value="30.0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.Row="0" x:Name="Overlay" Fill="Black" StrokeThickness="0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0" Opacity="0.0"/>
                        <Ellipse Grid.Row="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0"/>

                        <ContentControl Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" Width="{TemplateBinding util:RoundButtonProperties.IconSize}" Height="{TemplateBinding util:RoundButtonProperties.IconSize}" Foreground="{TemplateBinding Foreground}" 
                                       Content="{TemplateBinding util:RoundButtonProperties.Icon}"/>

                        <Grid Grid.Row="1" Margin="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="RoundTextIconButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0,5,0,0"/>
        <Setter Property="util:RoundButtonProperties.FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.Row="0" x:Name="Overlay" Fill="Black" StrokeThickness="0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0" Opacity="0.0"/>
                        <Ellipse Grid.Row="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0"/>

                        <Label Content="{TemplateBinding util:RoundButtonProperties.TextIcon}" Foreground="{TemplateBinding Foreground}" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" 
                               Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" 
                               FontSize="{TemplateBinding util:RoundButtonProperties.FontSize}" FontWeight="Bold"/>

                        <Grid Grid.Row="1" Margin="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="RoundTextIconCheckBox" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0,5,0,0"/>
        <Setter Property="util:RoundButtonProperties.FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.Row="0" x:Name="Overlay" Fill="Black" StrokeThickness="0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0" Opacity="0.0"/>
                        <Ellipse Grid.Row="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0"/>

                        <Label Content="{TemplateBinding util:RoundButtonProperties.TextIcon}" Foreground="{TemplateBinding Foreground}" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" 
                               Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" 
                               FontSize="{TemplateBinding util:RoundButtonProperties.FontSize}" FontWeight="Bold"/>

                        <Grid Grid.Row="1" Margin="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <Style x:Key="RoundTextIconRadioButton" TargetType="{x:Type RadioButton}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0,5,0,0"/>
        <Setter Property="util:RoundButtonProperties.FontSize" Value="13"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.Row="0" x:Name="Overlay" Fill="Black" StrokeThickness="0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0" Opacity="0.0"/>
                        <Ellipse Grid.Row="0" Stroke="{TemplateBinding Foreground}" StrokeThickness="1" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0"/>

                        <Label Content="{TemplateBinding util:RoundButtonProperties.TextIcon}" Foreground="{TemplateBinding Foreground}" 
                               HorizontalAlignment="Center" VerticalAlignment="Center" 
                               Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" 
                               FontSize="{TemplateBinding util:RoundButtonProperties.FontSize}" FontWeight="Bold"/>

                        <Grid Grid.Row="1" Margin="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="IconButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0,4,0,0"/>
        <Setter Property="util:RoundButtonProperties.IconSize" Value="30.0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="3*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <Ellipse Grid.Row="0" x:Name="Overlay" Fill="Black" StrokeThickness="0" Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" Margin="0,5,0,0" Opacity="0.0"/>

                        <ContentControl Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" Width="{TemplateBinding util:RoundButtonProperties.IconSize}" Height="{TemplateBinding util:RoundButtonProperties.IconSize}" Foreground="{TemplateBinding Foreground}" 
                                       Content="{TemplateBinding util:RoundButtonProperties.Icon}"/>

                        <Grid Grid.Row="1" Margin="2">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="200"/>
        <Setter Property="util:MenuButtonProperties.IconMargin" Value="0,4,0,0"/>
        <Setter Property="util:MenuButtonProperties.IconSize" Value="30.0"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid Background="{TemplateBinding Background}">                        
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="1*"/>
                            <ColumnDefinition Width="5"/>
                        </Grid.ColumnDefinitions>
                        
                        <Ellipse Grid.Row="0" Grid.RowSpan="2" x:Name="Overlay" Fill="Black" StrokeThickness="0" 
                                 Width="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}" 
                                 Margin="0,5,0,0" Opacity="0.0"/>

                        <Rectangle x:Name="Selection" Grid.RowSpan="2" Grid.Column="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                                   Fill="Orange" Opacity="0.0"/>
                        
                        <ContentControl Grid.Row="0" Grid.RowSpan="2" 
                                        Margin="{TemplateBinding util:MenuButtonProperties.IconMargin}" 
                                        Width="{TemplateBinding util:MenuButtonProperties.IconSize}" 
                                        Height="{TemplateBinding util:MenuButtonProperties.IconSize}" 
                                        Foreground="{TemplateBinding Foreground}" 
                                        Content="{TemplateBinding util:MenuButtonProperties.Icon}"/>

                        <Grid Grid.Row="0" Grid.Column="1" Margin="5, 5, 0, 0">
                            <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center" RecognizesAccessKey="True" />
                        </Grid>

                        <TextBlock Grid.Row="1" Grid.Column="1" Margin="5, 0, 0, 0" Text="{TemplateBinding util:MenuButtonProperties.Text}"
                                   FontWeight="Normal" VerticalAlignment="Center" HorizontalAlignment="Left">                            
                        </TextBlock>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource HotOpacity}"/>
                            <Setter TargetName="Selection" Property="Opacity" Value="0.7"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource CheckedOpacity}"/>
                            <Setter TargetName="Selection" Property="Opacity" Value="1.0"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="Overlay" Property="Opacity" Value="{StaticResource DisabledOpacity}"/>
                            <Setter TargetName="Selection" Property="Opacity" Value="0.0"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="ToolboxButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="overlay"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            RadiusX="10"
                            RadiusY="10"
                            Fill="#0A000000"
                            >
                        </Rectangle>

                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />

                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="overlay" Property="Fill" Value="#15000000"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="overlay" Property="Fill" Value="#20000000"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="overlay" Property="Fill" Value="#20000000"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ToolbarButton" TargetType="{x:Type Button}">
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
        
        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0"/>
        <Setter Property="util:RoundButtonProperties.IconSize" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource SizeConverter}, ConverterParameter=1.3}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Rectangle x:Name="overlay"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            RadiusX="5"
                            RadiusY="5"
                            Fill="#01000000"
                            >
                        </Rectangle>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ContentControl x:Name="contents"
                                            Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" 
                                            Width="{TemplateBinding util:RoundButtonProperties.IconSize}" 
                                            Height="{TemplateBinding util:RoundButtonProperties.IconSize}" 
                                            Foreground="{TemplateBinding Foreground}" 
                                            Content="{TemplateBinding util:RoundButtonProperties.Icon}"
                                            />

                            <Grid Grid.Row="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                            </Grid>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="overlay" Property="Fill" Value="#10000000"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="overlay" Property="Fill" Value="#20000000"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="contents" Property="Opacity" Value="0.3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ToolbarToggleButton" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="false"/>
        <Setter Property="OverridesDefaultStyle" Value="false"/>
        <Setter Property="MinHeight" Value="10"/>
        <Setter Property="MinWidth" Value="10"/>
        <Setter Property="Foreground" Value="{StaticResource ResourceKey=WidgetForegroundBrush}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Width" Value="{Binding ActualHeight, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>

        <Setter Property="util:RoundButtonProperties.IconMargin" Value="0"/>
        <Setter Property="util:RoundButtonProperties.IconSize" Value="{Binding ActualWidth, RelativeSource={RelativeSource Self}, Converter={StaticResource SizeConverter}, ConverterParameter=1.3}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Rectangle x:Name="overlay"
                            Width="{TemplateBinding Width}"
                            Height="{TemplateBinding Height}"
                            RadiusX="5"
                            RadiusY="5"
                            Fill="#01000000"
                            >
                        </Rectangle>

                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="1*"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <ContentControl Margin="{TemplateBinding util:RoundButtonProperties.IconMargin}" 
                                            Width="{TemplateBinding util:RoundButtonProperties.IconSize}" 
                                            Height="{TemplateBinding util:RoundButtonProperties.IconSize}" 
                                            Foreground="{TemplateBinding Foreground}" 
                                            Content="{TemplateBinding util:RoundButtonProperties.Icon}"
                                            />

                            <Grid Grid.Row="1">
                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                            </Grid>
                        </Grid>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="overlay" Property="Fill" Value="#10000000"/>
                        </Trigger>

                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="overlay" Property="Fill" Value="#19000000"/>
                        </Trigger>

                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="overlay" Property="Fill" Value="#20000000"/>
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="false">
                            <Setter TargetName="overlay" Property="Fill" Value="#20000000"/>
                            <Setter Property="Foreground" Value="#888888"/>
                        </Trigger>
                    </ControlTemplate.Triggers>

                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>